version: '3'
services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
       - '5672:5672'  # Puerto para RabbitMQ
       - '15672:15672'  # Puerto para la interfaz de administraci√≥n de RabbitMQ
    environment:
      - RABBITMQ_DEFAULT_USER=jsacristan
      - RABBITMQ_DEFAULT_PASS=Euuhtysdf2323_#dOuY441334
  postgres:
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5432:5432'llo
    environment:
      - POSTGRES_USER=jsacristan
      - POSTGRES_PASSWORD=jsdutySDS27781doop
      - POSTGRES_DB=cardLanguage
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  springboot:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    build: .
    #image: cards-api
    ports:
      - '8080:8080'  # Puerto para Spring Boot
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=jsacristan
      - SPRING_RABBITMQ_PASSWORD=Euuhtysdf2323_#dOuY441334
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cardLanguage
      - SPRING_DATASOURCE_USERNAME=jsacristan
      - SPRING_DATASOURCE_PASSWORD=jsdutySDS27781doop

